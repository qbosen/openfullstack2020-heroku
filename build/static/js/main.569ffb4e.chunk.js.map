{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","onFilterChange","filter","onChange","value","PersonForm","onNameChange","newName","onNumberChange","newNumber","onFormSubmit","onSubmit","type","Person","person","onRemove","name","number","onClick","Persons","persons","map","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","length","className","success","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","shownPersons","it","toLowerCase","startsWith","useEffect","personsService","event","target","preventDefault","old","find","window","confirm","_","setTimeout","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569ffb4e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({onFilterChange, filter})=>(\n    <div>\n        filter shown with <input onChange={onFilterChange} value={filter}/>\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({onNameChange, newName, onNumberChange, newNumber, onFormSubmit}) => {\n    return (\n        <form onSubmit={onFormSubmit}>\n            <div>\n                name: <input onChange={onNameChange} value={newName}/>\n            </div>\n            <div>\n                number: <input onChange={onNumberChange} value={newNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({person, onRemove}) => (\n    <div>{person.name} {person.number}\n        <button onClick={onRemove(person)}>删除</button>\n    </div>)\nconst Persons = ({persons, onRemove}) => (\n    <div>\n        {persons.map(person => <Person key={person.name} person={person} onRemove={onRemove}/>)}\n    </div>)\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n}","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message.length === 0) return null\n    const data = message[0]\n    return (\n        <div className={data.success ? \"notification\" : \"error\"}>\n            {data.message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useEffect, useState} from 'react'\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Person.js\";\nimport personsService from './services/persons'\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [message, setMessage] = useState([])\n    const shownPersons = [...persons.filter(it => it.name.toLowerCase().startsWith(filter.toLowerCase()))]\n\n    const onNameChange = (event) => setNewName(event.target.value)\n    const onNumberChange = (event) => setNewNumber(event.target.value)\n    const onFormSubmit = (event) => {\n        event.preventDefault()\n\n        const old = persons.find(it => it.name === newName);\n        if (old) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const person = {...old, name: newName, number: newNumber}\n                personsService.update(old.id, person)\n                    .then(_ => {\n                        setPersons(persons.map(it => it.id !== old.id ? it : person))\n                        setNewNumber('')\n                        setNewName('')\n                        setMessage([{message: `Update ${newName}`, success: true}])\n                        setTimeout(() => setMessage([]), 5000)\n                    })\n                    .catch(error => {\n                        setMessage([{\n                            message: `Information of ${newName} has already been removed from server`,\n                            success: false\n                        }])\n                        setPersons(persons.filter(it => it.id !== old.id))\n                        setTimeout(() => setMessage([]), 5000)\n                    })\n            }\n\n        } else {\n            // do add\n            const person = {name: newName, number: newNumber}\n            personsService.create(person)\n                .then(it => {\n                    setPersons(persons.concat(it))\n                    setNewNumber('')\n                    setNewName('')\n                    setMessage([{message: `Add ${newName}`, success: true}])\n                    setTimeout(() => setMessage([]), 5000)\n                })\n        }\n    }\n    const onFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n    const onRemove = (person) => (_) => {\n        if (window.confirm(`Delete ${person.name}`))\n            personsService.remove(person.id).then(_ => setPersons(persons.filter(it => it.id !== person.id)))\n    }\n\n    useEffect(() => {\n        personsService.getAll().then(data => setPersons(data))\n    }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message}/>\n            <Filter onFilterChange={onFilterChange} filter={filter}/>\n            <h3>add a new</h3>\n            <PersonForm onNumberChange={onNumberChange} newNumber={newNumber}\n                        onNameChange={onNameChange} newName={newName}\n                        onFormSubmit={onFormSubmit}/>\n            <h3>Numbers</h3>\n            <Persons persons={shownPersons} onRemove={onRemove}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}